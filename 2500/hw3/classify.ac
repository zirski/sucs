# Toby Hammond
# classify.ac
# For a list of inputted positive integers, records histogram of number of 
# digits for each number.

# r1: input
# r2: indexer
# r3: size of array(s)
# r4: array accessor variable
# r5: loop test variable
# r6: gen-purpose ptr
# r7: mutated array address (to access indices)

              in r1
              # output digits if input < 0
mainloop:     blt r1 &output
              # initialize indexer
              lli r2 0
              lli r6 &limits
              lui r6 &limits
              # r7 = &(r6[r2])
sorter:       add r7 r6 r2
              lw r4 r7 0
              sub r5 r1 r4
              # if r5 is less than r4 (upper limit of first range), move on
              bgt r5 &incr
              # read value of appropriate digit, increment, then store
              lli r6 &digits
              lui r6 &digits
              add r7 r6 r2
              lw r4 r7 0
              addi r4 r4 1
              sw r4 r7 0
              # having input down here means negative value processing is
              # faster
              in r1
              beq r0 &mainloop
incr:         addi r2 r2 1
              beq r0 &sorter
              # load each element from digits[] and output
output:       lli r6 &digits
              lui r6 &digits
              # reset loop variables
              lli r2 0
              lli r3 4
outputloop:   add r7 r6 r2
              # load val @ r7 r6[r2] into r4
              lw r4 r7 0
              out r4
              # loop test
              sub r5 r2 r3
              # increment index
              addi r2 r2 1
              blt r5 &outputloop
              .halt

# data
limits:       .fill 9
              .fill 99
              .fill 999
              .fill 9999
              .fill 32767
digits:       .fill 0
              .fill 0
              .fill 0
              .fill 0
              .fill 0